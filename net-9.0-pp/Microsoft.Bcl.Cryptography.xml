<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Bcl.Cryptography</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.MLKem" />
    <member name="M:System.Security.Cryptography.MLKem.#ctor(System.Security.Cryptography.MLKemAlgorithm)">
      <param name="algorithm" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.Decapsulate(System.Byte[])">
      <param name="ciphertext" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.Decapsulate(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})">
      <param name="ciphertext" />
      <param name="sharedSecret" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.DecapsulateCore(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})">
      <param name="ciphertext" />
      <param name="sharedSecret" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.Dispose" />
    <member name="M:System.Security.Cryptography.MLKem.Dispose(System.Boolean)">
      <param name="disposing" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.Encapsulate(System.Byte[]@,System.Byte[]@)">
      <param name="ciphertext" />
      <param name="sharedSecret" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.Encapsulate(System.Span{System.Byte},System.Span{System.Byte})">
      <param name="ciphertext" />
      <param name="sharedSecret" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.EncapsulateCore(System.Span{System.Byte},System.Span{System.Byte})">
      <param name="ciphertext" />
      <param name="sharedSecret" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportDecapsulationKey" />
    <member name="M:System.Security.Cryptography.MLKem.ExportDecapsulationKey(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportDecapsulationKeyCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncapsulationKey" />
    <member name="M:System.Security.Cryptography.MLKem.ExportEncapsulationKey(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncapsulationKeyCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKeyPem(System.String,System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportPkcs8PrivateKey" />
    <member name="M:System.Security.Cryptography.MLKem.ExportPkcs8PrivateKeyPem" />
    <member name="M:System.Security.Cryptography.MLKem.ExportPrivateSeed" />
    <member name="M:System.Security.Cryptography.MLKem.ExportPrivateSeed(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportPrivateSeedCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportSubjectPublicKeyInfo" />
    <member name="M:System.Security.Cryptography.MLKem.ExportSubjectPublicKeyInfoPem" />
    <member name="M:System.Security.Cryptography.MLKem.GenerateKey(System.Security.Cryptography.MLKemAlgorithm)">
      <param name="algorithm" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportDecapsulationKey(System.Security.Cryptography.MLKemAlgorithm,System.Byte[])">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportDecapsulationKey(System.Security.Cryptography.MLKemAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportEncapsulationKey(System.Security.Cryptography.MLKemAlgorithm,System.Byte[])">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportEncapsulationKey(System.Security.Cryptography.MLKemAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="passwordBytes" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <param name="password" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportEncryptedPkcs8PrivateKey(System.String,System.ReadOnlySpan{System.Byte})">
      <param name="password" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <param name="source" />
      <param name="passwordBytes" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <param name="source" />
      <param name="password" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportFromEncryptedPem(System.String,System.Byte[])">
      <param name="source" />
      <param name="passwordBytes" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportFromEncryptedPem(System.String,System.String)">
      <param name="source" />
      <param name="password" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportFromPem(System.ReadOnlySpan{System.Char})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportFromPem(System.String)">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportPkcs8PrivateKey(System.Byte[])">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportPkcs8PrivateKey(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportPrivateSeed(System.Security.Cryptography.MLKemAlgorithm,System.Byte[])">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportPrivateSeed(System.Security.Cryptography.MLKemAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportSubjectPublicKeyInfo(System.Byte[])">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportSubjectPublicKeyInfo(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="password" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.TryExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="password" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.TryExportPkcs8PrivateKey(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.TryExportPkcs8PrivateKeyCore(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.TryExportSubjectPublicKeyInfo(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="P:System.Security.Cryptography.MLKem.Algorithm" />
    <member name="P:System.Security.Cryptography.MLKem.IsSupported" />
    <member name="T:System.Security.Cryptography.MLKemAlgorithm" />
    <member name="M:System.Security.Cryptography.MLKemAlgorithm.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Security.Cryptography.MLKemAlgorithm.Equals(System.Security.Cryptography.MLKemAlgorithm)">
      <param name="other" />
    </member>
    <member name="M:System.Security.Cryptography.MLKemAlgorithm.GetHashCode" />
    <member name="M:System.Security.Cryptography.MLKemAlgorithm.op_Equality(System.Security.Cryptography.MLKemAlgorithm,System.Security.Cryptography.MLKemAlgorithm)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:System.Security.Cryptography.MLKemAlgorithm.op_Inequality(System.Security.Cryptography.MLKemAlgorithm,System.Security.Cryptography.MLKemAlgorithm)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.CiphertextSizeInBytes" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.DecapsulationKeySizeInBytes" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.EncapsulationKeySizeInBytes" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.MLKem1024" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.MLKem512" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.MLKem768" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.Name" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.PrivateSeedSizeInBytes" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.SharedSecretSizeInBytes" />
    <member name="T:System.Security.Cryptography.SlhDsa" />
    <member name="M:System.Security.Cryptography.SlhDsa.#ctor(System.Security.Cryptography.SlhDsaAlgorithm)">
      <param name="algorithm" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.Dispose" />
    <member name="M:System.Security.Cryptography.SlhDsa.Dispose(System.Boolean)">
      <param name="disposing" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportPkcs8PrivateKey" />
    <member name="M:System.Security.Cryptography.SlhDsa.ExportPkcs8PrivateKeyPem" />
    <member name="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaPublicKey(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaPublicKeyCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaSecretKey(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaSecretKeyCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportSubjectPublicKeyInfo" />
    <member name="M:System.Security.Cryptography.SlhDsa.ExportSubjectPublicKeyInfoPem" />
    <member name="M:System.Security.Cryptography.SlhDsa.GenerateKey(System.Security.Cryptography.SlhDsaAlgorithm)">
      <param name="algorithm" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="passwordBytes" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <param name="password" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <param name="source" />
      <param name="passwordBytes" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <param name="source" />
      <param name="password" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportFromPem(System.ReadOnlySpan{System.Char})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportPkcs8PrivateKey(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportSlhDsaPublicKey(System.Security.Cryptography.SlhDsaAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportSlhDsaSecretKey(System.Security.Cryptography.SlhDsaAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportSubjectPublicKeyInfo(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.SignData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="data" />
      <param name="destination" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.SignDataCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})">
      <param name="data" />
      <param name="context" />
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ThrowIfDisposed" />
    <member name="M:System.Security.Cryptography.SlhDsa.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="password" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.TryExportPkcs8PrivateKey(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.TryExportSubjectPublicKeyInfo(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.VerifyData(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="data" />
      <param name="signature" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.VerifyDataCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="data" />
      <param name="context" />
      <param name="signature" />
    </member>
    <member name="P:System.Security.Cryptography.SlhDsa.Algorithm" />
    <member name="P:System.Security.Cryptography.SlhDsa.IsSupported" />
    <member name="T:System.Security.Cryptography.SlhDsaAlgorithm" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.Name" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.PublicKeySizeInBytes" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SecretKeySizeInBytes" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SignatureSizeInBytes" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_128f" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_128s" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_192f" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_192s" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_256f" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_256s" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake128f" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake128s" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake192f" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake192s" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake256f" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake256s" />
  </members>
</doc>